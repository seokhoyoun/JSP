/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-03-07 10:16:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;
import java.util.ArrayList;

public final class memberListView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/views/member/../common/header.jsp", Long.valueOf(1551701000464L));
    _jspx_dependants.put("/views/member/../common/adminHeader.jsp", Long.valueOf(1551701007479L));
    _jspx_dependants.put("/views/member/../common/footer.jsp", Long.valueOf(1551698660712L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

Member loginUser = (Member)session.getAttribute("loginUser");
ArrayList<Member> list = (ArrayList<Member>) request.getAttribute("list");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>First</title>\r\n");
      out.write("<style>\r\n");
      out.write(" table, button {\r\n");
      out.write(" \tfont-size: 11px;\r\n");
      out.write(" }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
 if(loginUser != null && loginUser.getUserid().equals("admin")){ 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Admin</title>\r\n");
      out.write("<style>\r\n");
      out.write("\theader nav ul {\r\n");
      out.write("\t\tlist-style : none;\r\n");
      out.write("\t}\r\n");
      out.write("\theader nav ul li {\r\n");
      out.write("\t\tfloat: left;\r\n");
      out.write("\t\tmargin-right: 5px;\r\n");
      out.write("\t\tbackground-color : black;\r\n");
      out.write("\t}\r\n");
      out.write("\theader nav ul li a {\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\tpadding-top: 5px;\r\n");
      out.write("\t\tpadding-bottom: 0;\r\n");
      out.write("\t\twidth: 120px;\r\n");
      out.write("\t\theight: 35px;\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t\tfont-weight: bold;\r\n");
      out.write("\t\ttext-decoration:none;\r\n");
      out.write("\t}\r\n");
      out.write("\theader nav ul li a:hover{\r\n");
      out.write("\t\tbackground-color: red;\r\n");
      out.write("\t\ttext-shadow : 1px 1px 2px white;\r\n");
      out.write("\t\tbox-shadow: 2px 2px 4px gray;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<nav>\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li><a  href=\"/first/index.jsp\">Home</a></li>\r\n");
      out.write("\t\t\t\t<li><a  href=\"/first/mall\">회원 관리</a></li>\r\n");
      out.write("\t\t\t\t<li><a  href=\"\">공지사항 관리</a></li>\r\n");
      out.write("\t\t\t\t<li><a  href=\"\">게시글 관리</a></li>\r\n");
      out.write("\t\t\t\t<li><a  href=\"\">메뉴</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t</header>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
} else { 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>First</title>\r\n");
      out.write("<style>\r\n");
      out.write("\theader nav ul {\r\n");
      out.write("\t\tlist-style : none;\r\n");
      out.write("\t}\r\n");
      out.write("\theader nav ul li {\r\n");
      out.write("\t\tfloat: left;\r\n");
      out.write("\t\tmargin-right: 5px;\r\n");
      out.write("\t\tbackground-color : orange;\r\n");
      out.write("\t}\r\n");
      out.write("\theader nav ul li a {\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\tpadding-top: 5px;\r\n");
      out.write("\t\tpadding-bottom: 0;\r\n");
      out.write("\t\twidth: 120px;\r\n");
      out.write("\t\theight: 35px;\r\n");
      out.write("\t\tcolor: navy;\r\n");
      out.write("\t\tfont-weight: bold;\r\n");
      out.write("\t\ttext-decoration:none;\r\n");
      out.write("\t}\r\n");
      out.write("\theader nav ul li a:hover{\r\n");
      out.write("\t\tbackground-color: olive;\r\n");
      out.write("\t\ttext-shadow : 1px 1px 2px white;\r\n");
      out.write("\t\tbox-shadow: 2px 2px 4px gray;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<nav>\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li><a  href=\"/first/index.jsp\">Home</a></li>\r\n");
      out.write("\t\t\t\t<li><a  href=\"/first/nlist\">공지사항</a></li>\r\n");
      out.write("\t\t\t\t<li><a  href=\"/first/blist?page=1\">게시판</a></li>\r\n");
      out.write("\t\t\t\t<li><a  href=\"\">메뉴1</a></li>\r\n");
      out.write("\t\t\t\t<li><a  href=\"\">메뉴2</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t</header>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
} 
      out.write("\r\n");
      out.write("<hr style=\"clear:left;\">\r\n");
      out.write("\r\n");
      out.write("<h2 align=\"center\">회원 전체 관리 페이지</h2>\r\n");
      out.write("<br>\r\n");
      out.write("<table align=\"center\" cellspacing=\"0\" border=\"1\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>번호</th>\r\n");
      out.write("\t\t<th>아이디</th>\r\n");
      out.write("\t\t<th>이름</th>\r\n");
      out.write("\t\t<th>나이</th>\r\n");
      out.write("\t\t<th>성별</th>\r\n");
      out.write("\t\t<th>전화번호</th>\r\n");
      out.write("\t\t<th>이메일</th>\r\n");
      out.write("\t\t<th>취미</th>\r\n");
      out.write("\t\t<th>기타사항</th>\r\n");
      out.write("\t\t<th>가입날짜</th>\r\n");
      out.write("\t\t<th>마지막 정보수정 날짜</th>\r\n");
      out.write("\t\t<th>로그인</th>\r\n");
      out.write("\t\t<th>로그인 권한 제한</th>\r\n");
      out.write("\t\t<th>강제 탈퇴 처리</th>\r\n");
      out.write("\t</tr>\r\n");
 for(int i = 0; i < list.size(); i++) { 
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td>");
      out.print( i + 1 );
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( list.get(i).getUserid() );
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( list.get(i).getUsername());
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( list.get(i).getAge());
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( list.get(i).getGender());
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( list.get(i).getPhone());
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( list.get(i).getEmail());
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( list.get(i).getHobby());
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( list.get(i).getEtc());
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( list.get(i).getEnrollDate());
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print( list.get(i).getLastModified());
      out.write("</td>\r\n");
      out.write("\t<td><button>로그인 제한</button>&nbsp;</td>\r\n");
      out.write("\t\t<td><button>로그인 허용</button></td>\r\n");
      out.write("\t<td><button>강제탈퇴처리</button></td>\r\n");
      out.write("</tr>\r\n");
 } 
      out.write("\t\r\n");
      out.write("</table>\r\n");
      out.write("<hr style=\"clear:left\">\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<footer align=\"center\">\r\n");
      out.write("copyright@kh.org 2019-03-04 master : 홍길동<br>\r\n");
      out.write("tel : 02-1234-5642 fax : 02-1233-1234 서울시 강남구 역삼동\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
